plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    // id "com.google.gms.google-services"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def versionProps = new Properties()
def versionPropsFile = rootProject.file('version.properties')
if (versionPropsFile.exists()) {
    versionPropsFile.withReader('UTF-8') { reader ->
        versionProps.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode', '1')
def flutterVersionName = localProperties.getProperty('flutter.versionName', '1.0')

def compileSdkVersionProp = localProperties.getProperty('flutter.compileSdkVersion').toInteger()
def minSdkVersionProp = localProperties.getProperty('flutter.minSdkVersion').toInteger()
def targetSdkVersionProp = localProperties.getProperty('flutter.targetSdkVersion').toInteger()

android {
    namespace "com.abshere.mobile.app"
    compileSdkVersion compileSdkVersionProp
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        multiDexEnabled true
        applicationId "com.abshere.mobile.app"
        minSdkVersion minSdkVersionProp
        targetSdkVersion targetSdkVersionProp
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        manifestPlaceholders["partnerCode"] = "ABSHERE"
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64'
        }
    }

    flavorDimensions "releaseType" 

    productFlavors {
        uat {
            manifestPlaceholders = [
                appName: "Absherbe Mobile (UAT)",
            ]
            dimension "releaseType"
            applicationIdSuffix ".uat"
            versionCode versionProps.getProperty('code') as int
            versionName versionProps.getProperty('name')
        }
        
        preprod {
            manifestPlaceholders = [
                appName: "Absherbe Mobile (Preprod)",
            ]
            dimension "releaseType"
            applicationIdSuffix ".preprod"
            versionCode versionProps.getProperty('code') as int
            versionName versionProps.getProperty('name')
        }
        
        prod {
            manifestPlaceholders = [
                appName: "Absherbe Parts",
            ]
            dimension "releaseType"
            versionCode versionProps.getProperty('code') as int
            versionName versionProps.getProperty('name')
        }
    }

    // signingConfigs {
    //     release {
    //         keyAlias 'abshereapp'
    //         keyPassword 'yourpassword'
    //         storePassword 'yourpassword'
    //         storeFile file("${rootDir}/upload_keystore.jks")
    //         v1SigningEnabled true
    //         v2SigningEnabled true
    //     }
    //     debug {
    //         storeFile file("${rootDir}/debug_keystore.jks")
    //         keyAlias 'debug'
    //         keyPassword 'android'
    //         storePassword 'android'
    //         v1SigningEnabled true
    //         v2SigningEnabled true
    //     }
    // }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
            // signingConfig signingConfigs.release
            // minifyEnabled true
            // shrinkResources true
            // proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig = signingConfigs.debug
            // signingConfig signingConfigs.debug
            // minifyEnabled false
            // shrinkResources false
            // proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}